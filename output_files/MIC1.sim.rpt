Simulator report for MIC1
Sat Aug 03 17:21:59 2024
Quartus II 64-Bit Version 13.0.0 Build 156 04/24/2013 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 1.6 us       ;
; Simulation Netlist Size     ; 236 nodes    ;
; Simulation Coverage         ;      26.09 % ;
; Total Number of Transitions ; 666          ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Cyclone II   ;
; Device                      ; EP2C70F896I8 ;
+-----------------------------+--------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                                                                                   ;
+--------------------------------------------------------------------------------------------+-------------------------------------------------------------------------+---------------+
; Option                                                                                     ; Setting                                                                 ; Default Value ;
+--------------------------------------------------------------------------------------------+-------------------------------------------------------------------------+---------------+
; Simulation mode                                                                            ; Timing                                                                  ; Timing        ;
; Start time                                                                                 ; 0 ns                                                                    ; 0 ns          ;
; Simulation results format                                                                  ; VWF                                                                     ;               ;
; Vector input source                                                                        ; D:/Backup/AULAS/AOC/TRABAI-COM-REGISTERS/MIC1-GUILHERME-MATHEUS/MDR.vwf ;               ;
; Add pins automatically to simulation output waveforms                                      ; On                                                                      ; On            ;
; Check outputs                                                                              ; Off                                                                     ; Off           ;
; Report simulation coverage                                                                 ; On                                                                      ; On            ;
; Display complete 1/0 value coverage report                                                 ; On                                                                      ; On            ;
; Display missing 1-value coverage report                                                    ; On                                                                      ; On            ;
; Display missing 0-value coverage report                                                    ; On                                                                      ; On            ;
; Detect setup and hold time violations                                                      ; Off                                                                     ; Off           ;
; Detect glitches                                                                            ; Off                                                                     ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off                                                                     ; Off           ;
; Generate Signal Activity File                                                              ; Off                                                                     ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off                                                                     ; Off           ;
; Group bus channels in simulation results                                                   ; Off                                                                     ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On                                                                      ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE                                                              ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off                                                                     ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; Off                                                                     ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto                                                                    ; Auto          ;
+--------------------------------------------------------------------------------------------+-------------------------------------------------------------------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II 64-Bit to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      26.09 % ;
; Total nodes checked                                 ; 236          ;
; Total output ports checked                          ; 207          ;
; Total output ports with complete 1/0-value coverage ; 54           ;
; Total output ports with no 1/0-value coverage       ; 99           ;
; Total output ports with no 1-value coverage         ; 151          ;
; Total output ports with no 0-value coverage         ; 101          ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+----------------------------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                                                ;
+----------------------------------------------------+----------------------------------------------------+------------------+
; Node Name                                          ; Output Port Name                                   ; Output Port Type ;
+----------------------------------------------------+----------------------------------------------------+------------------+
; |MDR|register_32bit:inst|register_4bit:inst6|inst3 ; |MDR|register_32bit:inst|register_4bit:inst6|inst3 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst7|inst  ; |MDR|register_32bit:inst|register_4bit:inst7|inst  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst7|inst1 ; |MDR|register_32bit:inst|register_4bit:inst7|inst1 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst2|inst3 ; |MDR|register_32bit:inst|register_4bit:inst2|inst3 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst3|inst  ; |MDR|register_32bit:inst|register_4bit:inst3|inst  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst3|inst1 ; |MDR|register_32bit:inst|register_4bit:inst3|inst1 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst3|inst2 ; |MDR|register_32bit:inst|register_4bit:inst3|inst2 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst3|inst3 ; |MDR|register_32bit:inst|register_4bit:inst3|inst3 ; regout           ;
; |MDR|inst5~0                                       ; |MDR|inst5~0                                       ; combout          ;
; |MDR|inst6                                         ; |MDR|inst6                                         ; regout           ;
; |MDR|register_32bit:inst|inst11[20]~11             ; |MDR|register_32bit:inst|inst11[20]~11             ; combout          ;
; |MDR|register_32bit:inst|inst11[19]~12             ; |MDR|register_32bit:inst|inst11[19]~12             ; combout          ;
; |MDR|register_32bit:inst|inst11[18]~13             ; |MDR|register_32bit:inst|inst11[18]~13             ; combout          ;
; |MDR|register_32bit:inst|inst11[4]~27              ; |MDR|register_32bit:inst|inst11[4]~27              ; combout          ;
; |MDR|register_32bit:inst|inst11[3]~28              ; |MDR|register_32bit:inst|inst11[3]~28              ; combout          ;
; |MDR|register_32bit:inst|inst11[2]~29              ; |MDR|register_32bit:inst|inst11[2]~29              ; combout          ;
; |MDR|register_32bit:inst|inst11[1]~30              ; |MDR|register_32bit:inst|inst11[1]~30              ; combout          ;
; |MDR|register_32bit:inst|inst11[0]~31              ; |MDR|register_32bit:inst|inst11[0]~31              ; combout          ;
; |MDR|register_32bit:inst|inst12                    ; |MDR|register_32bit:inst|inst12                    ; combout          ;
; |MDR|DATA_ADDRESS[20]                              ; |MDR|DATA_ADDRESS[20]                              ; padio            ;
; |MDR|DATA_ADDRESS[19]                              ; |MDR|DATA_ADDRESS[19]                              ; padio            ;
; |MDR|DATA_ADDRESS[18]                              ; |MDR|DATA_ADDRESS[18]                              ; padio            ;
; |MDR|DATA_ADDRESS[3]                               ; |MDR|DATA_ADDRESS[3]                               ; padio            ;
; |MDR|DATA_ADDRESS[2]                               ; |MDR|DATA_ADDRESS[2]                               ; padio            ;
; |MDR|DATA_ADDRESS[1]                               ; |MDR|DATA_ADDRESS[1]                               ; padio            ;
; |MDR|OUT_B[20]                                     ; |MDR|OUT_B[20]                                     ; padio            ;
; |MDR|OUT_B[19]                                     ; |MDR|OUT_B[19]                                     ; padio            ;
; |MDR|OUT_B[18]                                     ; |MDR|OUT_B[18]                                     ; padio            ;
; |MDR|OUT_B[4]                                      ; |MDR|OUT_B[4]                                      ; padio            ;
; |MDR|OUT_B[3]                                      ; |MDR|OUT_B[3]                                      ; padio            ;
; |MDR|OUT_B[2]                                      ; |MDR|OUT_B[2]                                      ; padio            ;
; |MDR|OUT_B[1]                                      ; |MDR|OUT_B[1]                                      ; padio            ;
; |MDR|OUT_B[0]                                      ; |MDR|OUT_B[0]                                      ; padio            ;
; |MDR|MIR[6]                                        ; |MDR|MIR[6]~corein                                 ; combout          ;
; |MDR|MIR[3]                                        ; |MDR|MIR[3]~corein                                 ; combout          ;
; |MDR|MIR[2]                                        ; |MDR|MIR[2]~corein                                 ; combout          ;
; |MDR|MIR[1]                                        ; |MDR|MIR[1]~corein                                 ; combout          ;
; |MDR|MIR[0]                                        ; |MDR|MIR[0]~corein                                 ; combout          ;
; |MDR|IN_C[20]                                      ; |MDR|IN_C[20]~corein                               ; combout          ;
; |MDR|IN_C[19]                                      ; |MDR|IN_C[19]~corein                               ; combout          ;
; |MDR|IN_C[18]                                      ; |MDR|IN_C[18]~corein                               ; combout          ;
; |MDR|DATA_IN[3]                                    ; |MDR|DATA_IN[3]~corein                             ; combout          ;
; |MDR|IN_C[3]                                       ; |MDR|IN_C[3]~corein                                ; combout          ;
; |MDR|DATA_IN[2]                                    ; |MDR|DATA_IN[2]~corein                             ; combout          ;
; |MDR|IN_C[2]                                       ; |MDR|IN_C[2]~corein                                ; combout          ;
; |MDR|DATA_IN[1]                                    ; |MDR|DATA_IN[1]~corein                             ; combout          ;
; |MDR|IN_C[1]                                       ; |MDR|IN_C[1]~corein                                ; combout          ;
; |MDR|DATA_IN[0]                                    ; |MDR|DATA_IN[0]~corein                             ; combout          ;
; |MDR|IN_C[0]                                       ; |MDR|IN_C[0]~corein                                ; combout          ;
; |MDR|MIR[5]                                        ; |MDR|MIR[5]~corein                                 ; combout          ;
; |MDR|CLOCK                                         ; |MDR|CLOCK~corein                                  ; combout          ;
; |MDR|MIR[8]                                        ; |MDR|MIR[8]~corein                                 ; combout          ;
; |MDR|register_32bit:inst|inst12~clkctrl            ; |MDR|register_32bit:inst|inst12~clkctrl            ; outclk           ;
; |MDR|inst6~feeder                                  ; |MDR|inst6~feeder                                  ; combout          ;
+----------------------------------------------------+----------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+----------------------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                                   ;
+----------------------------------------------------+----------------------------------------------------+------------------+
; Node Name                                          ; Output Port Name                                   ; Output Port Type ;
+----------------------------------------------------+----------------------------------------------------+------------------+
; |MDR|register_32bit:inst|register_4bit:inst5|inst  ; |MDR|register_32bit:inst|register_4bit:inst5|inst  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst5|inst1 ; |MDR|register_32bit:inst|register_4bit:inst5|inst1 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst5|inst2 ; |MDR|register_32bit:inst|register_4bit:inst5|inst2 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst5|inst3 ; |MDR|register_32bit:inst|register_4bit:inst5|inst3 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst4|inst  ; |MDR|register_32bit:inst|register_4bit:inst4|inst  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst4|inst1 ; |MDR|register_32bit:inst|register_4bit:inst4|inst1 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst4|inst2 ; |MDR|register_32bit:inst|register_4bit:inst4|inst2 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst4|inst3 ; |MDR|register_32bit:inst|register_4bit:inst4|inst3 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst6|inst  ; |MDR|register_32bit:inst|register_4bit:inst6|inst  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst6|inst1 ; |MDR|register_32bit:inst|register_4bit:inst6|inst1 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst6|inst2 ; |MDR|register_32bit:inst|register_4bit:inst6|inst2 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst7|inst2 ; |MDR|register_32bit:inst|register_4bit:inst7|inst2 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst7|inst3 ; |MDR|register_32bit:inst|register_4bit:inst7|inst3 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst|inst   ; |MDR|register_32bit:inst|register_4bit:inst|inst   ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst|inst1  ; |MDR|register_32bit:inst|register_4bit:inst|inst1  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst|inst2  ; |MDR|register_32bit:inst|register_4bit:inst|inst2  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst|inst3  ; |MDR|register_32bit:inst|register_4bit:inst|inst3  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst1|inst  ; |MDR|register_32bit:inst|register_4bit:inst1|inst  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst1|inst1 ; |MDR|register_32bit:inst|register_4bit:inst1|inst1 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst1|inst2 ; |MDR|register_32bit:inst|register_4bit:inst1|inst2 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst1|inst3 ; |MDR|register_32bit:inst|register_4bit:inst1|inst3 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst2|inst  ; |MDR|register_32bit:inst|register_4bit:inst2|inst  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst2|inst1 ; |MDR|register_32bit:inst|register_4bit:inst2|inst1 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst2|inst2 ; |MDR|register_32bit:inst|register_4bit:inst2|inst2 ; regout           ;
; |MDR|register_32bit:inst|inst11[31]~0              ; |MDR|register_32bit:inst|inst11[31]~0              ; combout          ;
; |MDR|register_32bit:inst|inst11[30]~1              ; |MDR|register_32bit:inst|inst11[30]~1              ; combout          ;
; |MDR|register_32bit:inst|inst11[29]~2              ; |MDR|register_32bit:inst|inst11[29]~2              ; combout          ;
; |MDR|register_32bit:inst|inst11[28]~3              ; |MDR|register_32bit:inst|inst11[28]~3              ; combout          ;
; |MDR|register_32bit:inst|inst11[27]~4              ; |MDR|register_32bit:inst|inst11[27]~4              ; combout          ;
; |MDR|register_32bit:inst|inst11[26]~5              ; |MDR|register_32bit:inst|inst11[26]~5              ; combout          ;
; |MDR|register_32bit:inst|inst11[25]~6              ; |MDR|register_32bit:inst|inst11[25]~6              ; combout          ;
; |MDR|register_32bit:inst|inst11[24]~7              ; |MDR|register_32bit:inst|inst11[24]~7              ; combout          ;
; |MDR|register_32bit:inst|inst11[23]~8              ; |MDR|register_32bit:inst|inst11[23]~8              ; combout          ;
; |MDR|register_32bit:inst|inst11[22]~9              ; |MDR|register_32bit:inst|inst11[22]~9              ; combout          ;
; |MDR|register_32bit:inst|inst11[21]~10             ; |MDR|register_32bit:inst|inst11[21]~10             ; combout          ;
; |MDR|register_32bit:inst|inst11[17]~14             ; |MDR|register_32bit:inst|inst11[17]~14             ; combout          ;
; |MDR|register_32bit:inst|inst11[16]~15             ; |MDR|register_32bit:inst|inst11[16]~15             ; combout          ;
; |MDR|register_32bit:inst|inst11[15]~16             ; |MDR|register_32bit:inst|inst11[15]~16             ; combout          ;
; |MDR|register_32bit:inst|inst11[14]~17             ; |MDR|register_32bit:inst|inst11[14]~17             ; combout          ;
; |MDR|register_32bit:inst|inst11[13]~18             ; |MDR|register_32bit:inst|inst11[13]~18             ; combout          ;
; |MDR|register_32bit:inst|inst11[12]~19             ; |MDR|register_32bit:inst|inst11[12]~19             ; combout          ;
; |MDR|register_32bit:inst|inst11[11]~20             ; |MDR|register_32bit:inst|inst11[11]~20             ; combout          ;
; |MDR|register_32bit:inst|inst11[10]~21             ; |MDR|register_32bit:inst|inst11[10]~21             ; combout          ;
; |MDR|register_32bit:inst|inst11[9]~22              ; |MDR|register_32bit:inst|inst11[9]~22              ; combout          ;
; |MDR|register_32bit:inst|inst11[8]~23              ; |MDR|register_32bit:inst|inst11[8]~23              ; combout          ;
; |MDR|register_32bit:inst|inst11[7]~24              ; |MDR|register_32bit:inst|inst11[7]~24              ; combout          ;
; |MDR|register_32bit:inst|inst11[6]~25              ; |MDR|register_32bit:inst|inst11[6]~25              ; combout          ;
; |MDR|register_32bit:inst|inst11[5]~26              ; |MDR|register_32bit:inst|inst11[5]~26              ; combout          ;
; |MDR|DATA_ADDRESS[31]                              ; |MDR|DATA_ADDRESS[31]                              ; padio            ;
; |MDR|DATA_ADDRESS[30]                              ; |MDR|DATA_ADDRESS[30]                              ; padio            ;
; |MDR|DATA_ADDRESS[29]                              ; |MDR|DATA_ADDRESS[29]                              ; padio            ;
; |MDR|DATA_ADDRESS[28]                              ; |MDR|DATA_ADDRESS[28]                              ; padio            ;
; |MDR|DATA_ADDRESS[27]                              ; |MDR|DATA_ADDRESS[27]                              ; padio            ;
; |MDR|DATA_ADDRESS[26]                              ; |MDR|DATA_ADDRESS[26]                              ; padio            ;
; |MDR|DATA_ADDRESS[25]                              ; |MDR|DATA_ADDRESS[25]                              ; padio            ;
; |MDR|DATA_ADDRESS[24]                              ; |MDR|DATA_ADDRESS[24]                              ; padio            ;
; |MDR|DATA_ADDRESS[23]                              ; |MDR|DATA_ADDRESS[23]                              ; padio            ;
; |MDR|DATA_ADDRESS[22]                              ; |MDR|DATA_ADDRESS[22]                              ; padio            ;
; |MDR|DATA_ADDRESS[21]                              ; |MDR|DATA_ADDRESS[21]                              ; padio            ;
; |MDR|DATA_ADDRESS[17]                              ; |MDR|DATA_ADDRESS[17]                              ; padio            ;
; |MDR|DATA_ADDRESS[16]                              ; |MDR|DATA_ADDRESS[16]                              ; padio            ;
; |MDR|DATA_ADDRESS[15]                              ; |MDR|DATA_ADDRESS[15]                              ; padio            ;
; |MDR|DATA_ADDRESS[14]                              ; |MDR|DATA_ADDRESS[14]                              ; padio            ;
; |MDR|DATA_ADDRESS[13]                              ; |MDR|DATA_ADDRESS[13]                              ; padio            ;
; |MDR|DATA_ADDRESS[12]                              ; |MDR|DATA_ADDRESS[12]                              ; padio            ;
; |MDR|DATA_ADDRESS[11]                              ; |MDR|DATA_ADDRESS[11]                              ; padio            ;
; |MDR|DATA_ADDRESS[10]                              ; |MDR|DATA_ADDRESS[10]                              ; padio            ;
; |MDR|DATA_ADDRESS[9]                               ; |MDR|DATA_ADDRESS[9]                               ; padio            ;
; |MDR|DATA_ADDRESS[8]                               ; |MDR|DATA_ADDRESS[8]                               ; padio            ;
; |MDR|DATA_ADDRESS[7]                               ; |MDR|DATA_ADDRESS[7]                               ; padio            ;
; |MDR|DATA_ADDRESS[6]                               ; |MDR|DATA_ADDRESS[6]                               ; padio            ;
; |MDR|DATA_ADDRESS[5]                               ; |MDR|DATA_ADDRESS[5]                               ; padio            ;
; |MDR|DATA_ADDRESS[4]                               ; |MDR|DATA_ADDRESS[4]                               ; padio            ;
; |MDR|DATA_ADDRESS[0]                               ; |MDR|DATA_ADDRESS[0]                               ; padio            ;
; |MDR|OUT_B[31]                                     ; |MDR|OUT_B[31]                                     ; padio            ;
; |MDR|OUT_B[30]                                     ; |MDR|OUT_B[30]                                     ; padio            ;
; |MDR|OUT_B[29]                                     ; |MDR|OUT_B[29]                                     ; padio            ;
; |MDR|OUT_B[28]                                     ; |MDR|OUT_B[28]                                     ; padio            ;
; |MDR|OUT_B[27]                                     ; |MDR|OUT_B[27]                                     ; padio            ;
; |MDR|OUT_B[26]                                     ; |MDR|OUT_B[26]                                     ; padio            ;
; |MDR|OUT_B[25]                                     ; |MDR|OUT_B[25]                                     ; padio            ;
; |MDR|OUT_B[24]                                     ; |MDR|OUT_B[24]                                     ; padio            ;
; |MDR|OUT_B[23]                                     ; |MDR|OUT_B[23]                                     ; padio            ;
; |MDR|OUT_B[22]                                     ; |MDR|OUT_B[22]                                     ; padio            ;
; |MDR|OUT_B[21]                                     ; |MDR|OUT_B[21]                                     ; padio            ;
; |MDR|OUT_B[17]                                     ; |MDR|OUT_B[17]                                     ; padio            ;
; |MDR|OUT_B[16]                                     ; |MDR|OUT_B[16]                                     ; padio            ;
; |MDR|OUT_B[15]                                     ; |MDR|OUT_B[15]                                     ; padio            ;
; |MDR|OUT_B[14]                                     ; |MDR|OUT_B[14]                                     ; padio            ;
; |MDR|OUT_B[13]                                     ; |MDR|OUT_B[13]                                     ; padio            ;
; |MDR|OUT_B[12]                                     ; |MDR|OUT_B[12]                                     ; padio            ;
; |MDR|OUT_B[11]                                     ; |MDR|OUT_B[11]                                     ; padio            ;
; |MDR|OUT_B[10]                                     ; |MDR|OUT_B[10]                                     ; padio            ;
; |MDR|OUT_B[9]                                      ; |MDR|OUT_B[9]                                      ; padio            ;
; |MDR|OUT_B[8]                                      ; |MDR|OUT_B[8]                                      ; padio            ;
; |MDR|OUT_B[7]                                      ; |MDR|OUT_B[7]                                      ; padio            ;
; |MDR|OUT_B[6]                                      ; |MDR|OUT_B[6]                                      ; padio            ;
; |MDR|OUT_B[5]                                      ; |MDR|OUT_B[5]                                      ; padio            ;
; |MDR|DATA_IN[31]                                   ; |MDR|DATA_IN[31]~corein                            ; combout          ;
; |MDR|IN_C[31]                                      ; |MDR|IN_C[31]~corein                               ; combout          ;
; |MDR|LOAD                                          ; |MDR|LOAD~corein                                   ; combout          ;
; |MDR|DATA_IN[30]                                   ; |MDR|DATA_IN[30]~corein                            ; combout          ;
; |MDR|IN_C[30]                                      ; |MDR|IN_C[30]~corein                               ; combout          ;
; |MDR|DATA_IN[29]                                   ; |MDR|DATA_IN[29]~corein                            ; combout          ;
; |MDR|IN_C[29]                                      ; |MDR|IN_C[29]~corein                               ; combout          ;
; |MDR|DATA_IN[28]                                   ; |MDR|DATA_IN[28]~corein                            ; combout          ;
; |MDR|IN_C[28]                                      ; |MDR|IN_C[28]~corein                               ; combout          ;
; |MDR|DATA_IN[27]                                   ; |MDR|DATA_IN[27]~corein                            ; combout          ;
; |MDR|IN_C[27]                                      ; |MDR|IN_C[27]~corein                               ; combout          ;
; |MDR|DATA_IN[26]                                   ; |MDR|DATA_IN[26]~corein                            ; combout          ;
; |MDR|IN_C[26]                                      ; |MDR|IN_C[26]~corein                               ; combout          ;
; |MDR|DATA_IN[25]                                   ; |MDR|DATA_IN[25]~corein                            ; combout          ;
; |MDR|IN_C[25]                                      ; |MDR|IN_C[25]~corein                               ; combout          ;
; |MDR|DATA_IN[24]                                   ; |MDR|DATA_IN[24]~corein                            ; combout          ;
; |MDR|IN_C[24]                                      ; |MDR|IN_C[24]~corein                               ; combout          ;
; |MDR|DATA_IN[23]                                   ; |MDR|DATA_IN[23]~corein                            ; combout          ;
; |MDR|IN_C[23]                                      ; |MDR|IN_C[23]~corein                               ; combout          ;
; |MDR|DATA_IN[22]                                   ; |MDR|DATA_IN[22]~corein                            ; combout          ;
; |MDR|IN_C[22]                                      ; |MDR|IN_C[22]~corein                               ; combout          ;
; |MDR|DATA_IN[21]                                   ; |MDR|DATA_IN[21]~corein                            ; combout          ;
; |MDR|IN_C[21]                                      ; |MDR|IN_C[21]~corein                               ; combout          ;
; |MDR|DATA_IN[20]                                   ; |MDR|DATA_IN[20]~corein                            ; combout          ;
; |MDR|DATA_IN[19]                                   ; |MDR|DATA_IN[19]~corein                            ; combout          ;
; |MDR|DATA_IN[18]                                   ; |MDR|DATA_IN[18]~corein                            ; combout          ;
; |MDR|DATA_IN[17]                                   ; |MDR|DATA_IN[17]~corein                            ; combout          ;
; |MDR|IN_C[17]                                      ; |MDR|IN_C[17]~corein                               ; combout          ;
; |MDR|DATA_IN[16]                                   ; |MDR|DATA_IN[16]~corein                            ; combout          ;
; |MDR|IN_C[16]                                      ; |MDR|IN_C[16]~corein                               ; combout          ;
; |MDR|DATA_IN[15]                                   ; |MDR|DATA_IN[15]~corein                            ; combout          ;
; |MDR|IN_C[15]                                      ; |MDR|IN_C[15]~corein                               ; combout          ;
; |MDR|DATA_IN[14]                                   ; |MDR|DATA_IN[14]~corein                            ; combout          ;
; |MDR|IN_C[14]                                      ; |MDR|IN_C[14]~corein                               ; combout          ;
; |MDR|DATA_IN[13]                                   ; |MDR|DATA_IN[13]~corein                            ; combout          ;
; |MDR|IN_C[13]                                      ; |MDR|IN_C[13]~corein                               ; combout          ;
; |MDR|DATA_IN[12]                                   ; |MDR|DATA_IN[12]~corein                            ; combout          ;
; |MDR|IN_C[12]                                      ; |MDR|IN_C[12]~corein                               ; combout          ;
; |MDR|DATA_IN[11]                                   ; |MDR|DATA_IN[11]~corein                            ; combout          ;
; |MDR|IN_C[11]                                      ; |MDR|IN_C[11]~corein                               ; combout          ;
; |MDR|DATA_IN[10]                                   ; |MDR|DATA_IN[10]~corein                            ; combout          ;
; |MDR|IN_C[10]                                      ; |MDR|IN_C[10]~corein                               ; combout          ;
; |MDR|DATA_IN[9]                                    ; |MDR|DATA_IN[9]~corein                             ; combout          ;
; |MDR|IN_C[9]                                       ; |MDR|IN_C[9]~corein                                ; combout          ;
; |MDR|DATA_IN[8]                                    ; |MDR|DATA_IN[8]~corein                             ; combout          ;
; |MDR|IN_C[8]                                       ; |MDR|IN_C[8]~corein                                ; combout          ;
; |MDR|DATA_IN[7]                                    ; |MDR|DATA_IN[7]~corein                             ; combout          ;
; |MDR|IN_C[7]                                       ; |MDR|IN_C[7]~corein                                ; combout          ;
; |MDR|DATA_IN[6]                                    ; |MDR|DATA_IN[6]~corein                             ; combout          ;
; |MDR|IN_C[6]                                       ; |MDR|IN_C[6]~corein                                ; combout          ;
; |MDR|DATA_IN[5]                                    ; |MDR|DATA_IN[5]~corein                             ; combout          ;
; |MDR|IN_C[5]                                       ; |MDR|IN_C[5]~corein                                ; combout          ;
; |MDR|LOAD~clkctrl                                  ; |MDR|LOAD~clkctrl                                  ; outclk           ;
+----------------------------------------------------+----------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+----------------------------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                                                   ;
+----------------------------------------------------+----------------------------------------------------+------------------+
; Node Name                                          ; Output Port Name                                   ; Output Port Type ;
+----------------------------------------------------+----------------------------------------------------+------------------+
; |MDR|register_32bit:inst|register_4bit:inst5|inst  ; |MDR|register_32bit:inst|register_4bit:inst5|inst  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst5|inst1 ; |MDR|register_32bit:inst|register_4bit:inst5|inst1 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst5|inst2 ; |MDR|register_32bit:inst|register_4bit:inst5|inst2 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst5|inst3 ; |MDR|register_32bit:inst|register_4bit:inst5|inst3 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst4|inst  ; |MDR|register_32bit:inst|register_4bit:inst4|inst  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst4|inst1 ; |MDR|register_32bit:inst|register_4bit:inst4|inst1 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst4|inst2 ; |MDR|register_32bit:inst|register_4bit:inst4|inst2 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst4|inst3 ; |MDR|register_32bit:inst|register_4bit:inst4|inst3 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst6|inst  ; |MDR|register_32bit:inst|register_4bit:inst6|inst  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst6|inst1 ; |MDR|register_32bit:inst|register_4bit:inst6|inst1 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst6|inst2 ; |MDR|register_32bit:inst|register_4bit:inst6|inst2 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst7|inst2 ; |MDR|register_32bit:inst|register_4bit:inst7|inst2 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst7|inst3 ; |MDR|register_32bit:inst|register_4bit:inst7|inst3 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst|inst   ; |MDR|register_32bit:inst|register_4bit:inst|inst   ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst|inst1  ; |MDR|register_32bit:inst|register_4bit:inst|inst1  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst|inst2  ; |MDR|register_32bit:inst|register_4bit:inst|inst2  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst|inst3  ; |MDR|register_32bit:inst|register_4bit:inst|inst3  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst1|inst  ; |MDR|register_32bit:inst|register_4bit:inst1|inst  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst1|inst1 ; |MDR|register_32bit:inst|register_4bit:inst1|inst1 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst1|inst2 ; |MDR|register_32bit:inst|register_4bit:inst1|inst2 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst1|inst3 ; |MDR|register_32bit:inst|register_4bit:inst1|inst3 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst2|inst  ; |MDR|register_32bit:inst|register_4bit:inst2|inst  ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst2|inst1 ; |MDR|register_32bit:inst|register_4bit:inst2|inst1 ; regout           ;
; |MDR|register_32bit:inst|register_4bit:inst2|inst2 ; |MDR|register_32bit:inst|register_4bit:inst2|inst2 ; regout           ;
; |MDR|register_32bit:inst|inst11[31]~0              ; |MDR|register_32bit:inst|inst11[31]~0              ; combout          ;
; |MDR|register_32bit:inst|inst11[30]~1              ; |MDR|register_32bit:inst|inst11[30]~1              ; combout          ;
; |MDR|register_32bit:inst|inst11[29]~2              ; |MDR|register_32bit:inst|inst11[29]~2              ; combout          ;
; |MDR|register_32bit:inst|inst11[28]~3              ; |MDR|register_32bit:inst|inst11[28]~3              ; combout          ;
; |MDR|register_32bit:inst|inst11[27]~4              ; |MDR|register_32bit:inst|inst11[27]~4              ; combout          ;
; |MDR|register_32bit:inst|inst11[26]~5              ; |MDR|register_32bit:inst|inst11[26]~5              ; combout          ;
; |MDR|register_32bit:inst|inst11[25]~6              ; |MDR|register_32bit:inst|inst11[25]~6              ; combout          ;
; |MDR|register_32bit:inst|inst11[24]~7              ; |MDR|register_32bit:inst|inst11[24]~7              ; combout          ;
; |MDR|register_32bit:inst|inst11[23]~8              ; |MDR|register_32bit:inst|inst11[23]~8              ; combout          ;
; |MDR|register_32bit:inst|inst11[22]~9              ; |MDR|register_32bit:inst|inst11[22]~9              ; combout          ;
; |MDR|register_32bit:inst|inst11[21]~10             ; |MDR|register_32bit:inst|inst11[21]~10             ; combout          ;
; |MDR|register_32bit:inst|inst11[17]~14             ; |MDR|register_32bit:inst|inst11[17]~14             ; combout          ;
; |MDR|register_32bit:inst|inst11[16]~15             ; |MDR|register_32bit:inst|inst11[16]~15             ; combout          ;
; |MDR|register_32bit:inst|inst11[15]~16             ; |MDR|register_32bit:inst|inst11[15]~16             ; combout          ;
; |MDR|register_32bit:inst|inst11[14]~17             ; |MDR|register_32bit:inst|inst11[14]~17             ; combout          ;
; |MDR|register_32bit:inst|inst11[13]~18             ; |MDR|register_32bit:inst|inst11[13]~18             ; combout          ;
; |MDR|register_32bit:inst|inst11[12]~19             ; |MDR|register_32bit:inst|inst11[12]~19             ; combout          ;
; |MDR|register_32bit:inst|inst11[11]~20             ; |MDR|register_32bit:inst|inst11[11]~20             ; combout          ;
; |MDR|register_32bit:inst|inst11[10]~21             ; |MDR|register_32bit:inst|inst11[10]~21             ; combout          ;
; |MDR|register_32bit:inst|inst11[9]~22              ; |MDR|register_32bit:inst|inst11[9]~22              ; combout          ;
; |MDR|register_32bit:inst|inst11[8]~23              ; |MDR|register_32bit:inst|inst11[8]~23              ; combout          ;
; |MDR|register_32bit:inst|inst11[7]~24              ; |MDR|register_32bit:inst|inst11[7]~24              ; combout          ;
; |MDR|register_32bit:inst|inst11[6]~25              ; |MDR|register_32bit:inst|inst11[6]~25              ; combout          ;
; |MDR|register_32bit:inst|inst11[5]~26              ; |MDR|register_32bit:inst|inst11[5]~26              ; combout          ;
; |MDR|DATA_IN[31]                                   ; |MDR|DATA_IN[31]~corein                            ; combout          ;
; |MDR|IN_C[31]                                      ; |MDR|IN_C[31]~corein                               ; combout          ;
; |MDR|DATA_IN[30]                                   ; |MDR|DATA_IN[30]~corein                            ; combout          ;
; |MDR|IN_C[30]                                      ; |MDR|IN_C[30]~corein                               ; combout          ;
; |MDR|DATA_IN[29]                                   ; |MDR|DATA_IN[29]~corein                            ; combout          ;
; |MDR|IN_C[29]                                      ; |MDR|IN_C[29]~corein                               ; combout          ;
; |MDR|DATA_IN[28]                                   ; |MDR|DATA_IN[28]~corein                            ; combout          ;
; |MDR|IN_C[28]                                      ; |MDR|IN_C[28]~corein                               ; combout          ;
; |MDR|DATA_IN[27]                                   ; |MDR|DATA_IN[27]~corein                            ; combout          ;
; |MDR|IN_C[27]                                      ; |MDR|IN_C[27]~corein                               ; combout          ;
; |MDR|DATA_IN[26]                                   ; |MDR|DATA_IN[26]~corein                            ; combout          ;
; |MDR|IN_C[26]                                      ; |MDR|IN_C[26]~corein                               ; combout          ;
; |MDR|DATA_IN[25]                                   ; |MDR|DATA_IN[25]~corein                            ; combout          ;
; |MDR|IN_C[25]                                      ; |MDR|IN_C[25]~corein                               ; combout          ;
; |MDR|DATA_IN[24]                                   ; |MDR|DATA_IN[24]~corein                            ; combout          ;
; |MDR|IN_C[24]                                      ; |MDR|IN_C[24]~corein                               ; combout          ;
; |MDR|DATA_IN[23]                                   ; |MDR|DATA_IN[23]~corein                            ; combout          ;
; |MDR|IN_C[23]                                      ; |MDR|IN_C[23]~corein                               ; combout          ;
; |MDR|DATA_IN[22]                                   ; |MDR|DATA_IN[22]~corein                            ; combout          ;
; |MDR|IN_C[22]                                      ; |MDR|IN_C[22]~corein                               ; combout          ;
; |MDR|DATA_IN[21]                                   ; |MDR|DATA_IN[21]~corein                            ; combout          ;
; |MDR|IN_C[21]                                      ; |MDR|IN_C[21]~corein                               ; combout          ;
; |MDR|DATA_IN[20]                                   ; |MDR|DATA_IN[20]~corein                            ; combout          ;
; |MDR|DATA_IN[19]                                   ; |MDR|DATA_IN[19]~corein                            ; combout          ;
; |MDR|DATA_IN[18]                                   ; |MDR|DATA_IN[18]~corein                            ; combout          ;
; |MDR|DATA_IN[17]                                   ; |MDR|DATA_IN[17]~corein                            ; combout          ;
; |MDR|IN_C[17]                                      ; |MDR|IN_C[17]~corein                               ; combout          ;
; |MDR|DATA_IN[16]                                   ; |MDR|DATA_IN[16]~corein                            ; combout          ;
; |MDR|IN_C[16]                                      ; |MDR|IN_C[16]~corein                               ; combout          ;
; |MDR|DATA_IN[15]                                   ; |MDR|DATA_IN[15]~corein                            ; combout          ;
; |MDR|IN_C[15]                                      ; |MDR|IN_C[15]~corein                               ; combout          ;
; |MDR|DATA_IN[14]                                   ; |MDR|DATA_IN[14]~corein                            ; combout          ;
; |MDR|IN_C[14]                                      ; |MDR|IN_C[14]~corein                               ; combout          ;
; |MDR|DATA_IN[13]                                   ; |MDR|DATA_IN[13]~corein                            ; combout          ;
; |MDR|IN_C[13]                                      ; |MDR|IN_C[13]~corein                               ; combout          ;
; |MDR|DATA_IN[12]                                   ; |MDR|DATA_IN[12]~corein                            ; combout          ;
; |MDR|IN_C[12]                                      ; |MDR|IN_C[12]~corein                               ; combout          ;
; |MDR|DATA_IN[11]                                   ; |MDR|DATA_IN[11]~corein                            ; combout          ;
; |MDR|IN_C[11]                                      ; |MDR|IN_C[11]~corein                               ; combout          ;
; |MDR|DATA_IN[10]                                   ; |MDR|DATA_IN[10]~corein                            ; combout          ;
; |MDR|IN_C[10]                                      ; |MDR|IN_C[10]~corein                               ; combout          ;
; |MDR|DATA_IN[9]                                    ; |MDR|DATA_IN[9]~corein                             ; combout          ;
; |MDR|IN_C[9]                                       ; |MDR|IN_C[9]~corein                                ; combout          ;
; |MDR|DATA_IN[8]                                    ; |MDR|DATA_IN[8]~corein                             ; combout          ;
; |MDR|IN_C[8]                                       ; |MDR|IN_C[8]~corein                                ; combout          ;
; |MDR|DATA_IN[7]                                    ; |MDR|DATA_IN[7]~corein                             ; combout          ;
; |MDR|IN_C[7]                                       ; |MDR|IN_C[7]~corein                                ; combout          ;
; |MDR|DATA_IN[6]                                    ; |MDR|DATA_IN[6]~corein                             ; combout          ;
; |MDR|IN_C[6]                                       ; |MDR|IN_C[6]~corein                                ; combout          ;
; |MDR|DATA_IN[5]                                    ; |MDR|DATA_IN[5]~corein                             ; combout          ;
; |MDR|IN_C[5]                                       ; |MDR|IN_C[5]~corein                                ; combout          ;
; |MDR|DATA_IN[4]                                    ; |MDR|DATA_IN[4]~corein                             ; combout          ;
; |MDR|IN_C[4]                                       ; |MDR|IN_C[4]~corein                                ; combout          ;
+----------------------------------------------------+----------------------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit Simulator
    Info: Version 13.0.0 Build 156 04/24/2013 SJ Web Edition
    Info: Processing started: Sat Aug 03 17:21:59 2024
Info: Command: quartus_sim --simulation_results_format=VWF MIC1 -c MIC1
Info (324025): Using vector source file "D:/Backup/AULAS/AOC/TRABAI-COM-REGISTERS/MIC1-GUILHERME-MATHEUS/MDR.vwf"
Info (310003): Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info (310004): Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info (310002): Simulation partitioned into 1 sub-simulations
Info (328053): Simulation coverage is      26.09 %
Info (328052): Number of transitions in simulation is 666
Info (324045): Vector file MIC1.sim.vwf is saved in VWF text format. You can compress it into CVWF format in order to reduce file size. For more details please refer to the Quartus II Help.
Info: Quartus II 64-Bit Simulator was successful. 0 errors, 0 warnings
    Info: Peak virtual memory: 4472 megabytes
    Info: Processing ended: Sat Aug 03 17:21:59 2024
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:00


